Q1) Explain the difference between IS-A and Has-A relationship with the help of an
example and explain about access modifiers and their accessibility?

Ans :- 
   An IS-A relationship is inheritance. The classes which inherit are known as sub classes or child classes.
    IS-A relationship is completely inheritance. This means, that the child class is a type of parent class. 
       For example, an apple is a fruit. So you will extend fruit to get orange.
       
        class orangeextends Fruit {

             }
       
       In Java, a Has-A relationship is also known as composition. It is also used for code reusability in Java. 
       In Java, a Has-A relationship simply means that an instance of one class has a reference to an instance of 
       another class or an other instance of the same class.
       
       public class Vehicle{}
       public class Speed{}
       public class Van extends Vehicle {
       private Speed sp;
         }
       
       In Java, access modifiers are used to set the accessibility (visibility) of classes, interfaces, variables, 
       methods, constructors, data members, and the setter methods.
        
       There are four types of Java access modifiers:

      Private: The access level of a private modifier is only within the class. It cannot be accessed from outside the class.

     Default: The access level of a default modifier is only within the package. It cannot be accessed from outside the package.
               If you do not specify any access level, it will be the default.
 
     Protected: The access level of a protected modifier is within the package and outside the package through child class. 
                 If you do not make the child class, it cannot be accessed from outside the package.

     Public: The access level of a public modifier is everywhere. It can be accessed from within the class, outside the class,
               within the package and outside the package.
 
 
 
 
 